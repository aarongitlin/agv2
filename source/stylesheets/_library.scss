
.page-title {
  @extend h2;
  font-weight: 700;
  @include margin-top--large;
}
.page-description {
  @extend p;
  width: 75%;
  @include margin-bottom--medium;
}
.book__grid {
  @include media($small-screen-up) {
    // on mobile, no grid just flex height items
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  @include media($medium-screen-up) {
    // on tablets and up create a 6 column grid with repeating rows.
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-auto-rows: minmax(11rem, 1fr);
    align-items: center;
  }
}
.book {
  @include media($small-screen-up) {
    // all books are the same size on mobile
    flex: 1;
    max-width: 380px;
    padding: 2rem;
  }
  @include media($medium-screen-up) {
    // reset mobile logic and assign sizes for books on larger screens
      max-width: none;
      padding: 0;
      &.large {
        width: 83.33%;
        max-width: 18rem;
      }
      &.medium {
        max-width: 66.67%;
      }
      &.small {
        max-width: 50%;
      }
    }

  & img {
    // might want this to be universal, it's because otherwise images seem to be treated as inline elements and therefore follow line-height logic
    display: block;
  }

  &__title {
    @extend p.heading--small;
    font-size: 1.0rem;
    margin-top: 0.2rem;
    a {
      color: $gray-6;
    }
  }

  &__author {
    @extend p.text--small;
    font-style: italic;
    line-height: 1.2;
  }

  &--hero {
    // design for the first "hero" item
    background-color: $gray-1;
    @include media($small-screen-up) {
      padding: 0;
    }
    & .book__image  {
      @include media($small-screen-up) {
        padding: 1rem;
      }
      @include media($medium-screen-up) {
        width: 66.67%;
        margin: auto;
      }
    }
    & .book__info {
      padding: 0rem 2rem 1rem 1rem;
    }
    & .book__title {
      @extend h3;
    }
    & .book__short-description {
      @extend p.text--small;
    }
  }
  // establishing grid rules for the books
  @include media($medium-screen-up) {
    // First book - starting in 1st col 1st row, 3x5 (5 row max, flex start)
    &:nth-child(1) {
      grid-column: 1 / 4;
      grid-row: 1 / 8;
      align-self: start;
    }
    // Top bookshelf - next 4 items
    // 2nd book starts in the 4th column and 3rd row, and is 2x3 (3 row max)
    &:nth-child(2) {
      grid-column: 4 / 6;
      grid-row: 4 / 8;
      @extend .book.large;
      align-self: start;
      justify-self: center;
    }
    // 3rd book starts in 4th col and 1st row, and is 2x3 (3 row max)
    &:nth-child(3) {
      grid-column: 5 / 7;
      grid-row: 1 / 4;
      @extend .book.large;
      align-self: start;
      justify-self: center;
    }
    // 4th book starts in 6th column and 5th row, and is 1x2 (2 row max)
    &:nth-child(4) {
      grid-column: 6 / 7;
      grid-row: 6 / 8;
      align-self: start;
    }
    // All remaining books sit on the implicit grid
    // They are 2 columns wide, and 3 rows long.
    // The left items are left justified, the middle ones center, and right ones right justified
    &:nth-child(n+5) {
      grid-column-start: span 2;
      grid-row-start: span 3;
    }
    &:nth-child(3n+5) {
      justify-self: left;
    }
    &:nth-child(3n+6) {
      justify-self: center;
    }
    &:nth-child(3n+7) {
      justify-self: right;
    }
  }
  @include media($large-screen-up) {
    &:nth-child(6) {
    }
  }
}
