
.wrapper {
  @include wrapper;
}

.page-title {
  @include serif--xl;
  font-weight: 400;
  @include margin-top--large;
}
.page-description {
  @include serif--m;
  width: 75%;
  margin-top: $m;
  color: $gray-5;
}
// .book__grid {
//   @include media($small-screen-up) {
//     // on mobile, no grid just flex height items
//     display: flex;
//     flex-direction: column;
//     align-items: center;
//     margin-top: $l;
//   }
//   @include media($medium-screen-up) {
//     // on tablets and up create a 6 column grid with repeating rows.
//     display: grid;
//     grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr;
//     grid-template-rows: 6rem;
//     align-items: center;
//   }
// }

.book-hero {
  // grid
  display: grid;
  grid-template-columns: 0.4fr 0.6fr;
  grid-template-areas:
    "hero-image hero-image"
    "hero-desc  hero-desc";
  @include media($medium-screen-up) {
    grid-template-areas:
      "hero-image hero-desc";
    grid-column-gap: $m;
  }

  &__image {
    grid-area: hero-image;
    
    img {
      @include book-shadow;
      width: 100%;
    }
  }
  &__info {
    grid-area: hero-desc;
  }
  &__title {
    @include sans-serif--xl;
  }
  &__author {
    @include serif--s;
    color: $gray-4;
    margin-top: $s;
  }
  &__short-description {
    @include serif--m;
    white-space: pre-line; // added this to work with weird yaml formatting. I could probably understand this more than I do.
    color: $gray-6;
    margin-top: $l;
  }
  // margins and spacing
  margin-top: $xl;
  
}


.space-one {
  // grid - 6 columns, 8 rows
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  grid-template-rows: auto auto $l auto auto;
  grid-template-areas:
    "img1  img1  img1  img1  .     ."
    "info1 info1 info1 info1 info1 info1"
    ".     .     .     .     .     ."
    "img2  img2  img2  img2  .     ."
    "info2 info2 info2 info2 info2 info2";
  @include media($medium-screen-up) {
    grid-template-rows: auto;
    grid-template-areas:
      "img1  img1  info1 info1 info1 info1"
      "img1  img1  info1 info1 info1 info1"
      "img1  img1  .     .     img2  img2"
      "img1  img1  .     .     img2  img2"
      ".     info2 info2 info2 img2  img2"
      ".     info2 info2 info2 img2  img2";
  }

  // Using nth child to assign the books and images to grid areas. not sure if this 
  // or assigning a class in markup is better

  // spacing
  margin-top: $xl;

  &__book {

    &__image {
      display: grid;

      &:nth-child(1) {
        grid-area: img1;
        img {
          width: 100%;
          @include book-shadow-2;
          z-index: 1; //to make sure shadow goes over info BG
        }
      }
      &:nth-child(3) {
        grid-area: img2;
        img {
          align-self: end;
          @include book-shadow-2;
        }
      }
    }
    &__info {
      &:nth-child(2) {
        grid-area: info1;
        @include media($medium-screen-up) {
          padding-left: $s;
        }
      }
      &:nth-child(4) {
        grid-area: info2;
        align-self: end;
        @include media($medium-screen-up) {
          text-align: right;
          padding-right: $s;
        }
      }
    }

    &__title {
      @include sans-serif--l;
      padding: $m 2.5% 0 2.5%;
      //background-color: $off-white;
    }
    &__author {
      @include serif--m;
      color: $gray-4;
      //background-color: $off-white;
      padding: $xs 2.5% 0 2.5%;
    }
    &__short-description {
      @include serif--s;
      line-height: 1.5;
      //background-color: $off-white;
      padding: $m 2.5% $m 2.5%;
    }
  }
}

.space-two {
  margin-top: $xl;
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-areas: 
    "rank-two   rank-two   rank-two"
    "rank-three rank-three rank-three";
  @include media($medium-screen-up) {
    grid-template-areas:
      "rank-two rank-two rank-three"
      "rank-two rank-two rank-three"
      "rank-two rank-two rank-three"
      "rank-two rank-two rank-three";
  }
}
.rank-two {
  grid-area: rank-two;
  display: grid;
  grid-template-columns: repeat(2, 1fr);

  &__book {
    padding: $s;

    &__image {
      align-self: center;
      justify-self: center;
        img {
          @include book-shadow-2;
        }
    }
    &__info {
      align-self: end;
    }
    &__title {
      @include sans-serif--m;
      font-weight: 700;
      margin-top: $xs;
    }
    &__author {
      @include serif--s;
      color: $gray-4;
      margin-top: $xs;
    }
  }
}

.rank-three {
  margin-top: $m;
  grid-area: rank-three;
  display: grid;
  grid-template-columns: repeat(3, 1fr);

  @include media($medium-screen-up) {
    margin-top: $xxl;
    grid-template-columns: repeat(2, 1fr);
  }
  &__book {
    padding: $xs;
    align-self: center;
  }
}
//   .rank-three {
//     padding: $s;
//     display: grid;
//     align-content: start;
//     justify-content: center;

//     &__image img {
//       @include book-shadow;
//     }

//     &:nth-child(5) {
//       grid-area: img7;
//     }
//     &:nth-child(6) {
//       grid-area: img8;
//     }
//     &:nth-child(7) {
//       grid-area: img9;
//     }
//     &:nth-child(8) {
//       grid-area: img10;
//     }
//     &:nth-child(9) {
//       grid-area: img11;
//     }
//     &:nth-child(10) {
//       grid-area: img12;
//     }
//     &:nth-child(11) {
//       grid-area: img13;
//     }
//     &:nth-child(12) {
//       grid-area: img14;
//     }
//   }
// }


// .book {
//   @include media($small-screen-up) {
//     // all books are the same size on mobile
//     flex: 1;
//     max-width: 380px;
//     padding: 2rem;
//   }
//   @include media($medium-screen-up) {
//     // reset mobile logic and assign sizes for books on larger screens
//       max-width: none;
//       padding: 0;
//       &.large {
//         width: 83.33%;
//         max-width: 18rem;
//       }
//       &.medium {
//         max-width: 66.67%;
//       }
//       &.small {
//         max-width: 50%;
//       }
//     }

//   & img {
//     // might want this to be universal, it's because otherwise images seem to be treated as inline elements and therefore follow line-height logic
//     display: block;
//   }

//   &__title {
//     @extend p.heading--small;
//     font-size: 1.0rem;
//     margin-top: 0.2rem;
//     a {
//       color: $gray-6;
//     }
//   }

//   &__author {
//     @extend p.text--small;
//     font-style: italic;
//     line-height: 1.2;
//   }

//   &--hero {
//     // design for the first "hero" item
//     background-color: $off-white;
//     @include media($small-screen-up) {
//       padding: 0;
//     }
//     & .book__image  {
//       @include media($small-screen-up) {
//         padding: 1rem;
//       }
//       @include media($medium-screen-up) {
//         width: 66.67%;
//         margin: auto;
//       }
//     }
//     & .book__info {
//       padding: 0rem 2rem 1rem 1rem;
//     }
//     & .book__title {
//       @extend h3;
//     }
//     & .book__short-description {
//       @extend p.text--small;
//     }
//   }
//   // establishing grid rules for the books
//   @include media($medium-screen-up) {
//     // First book - starting in 1st col 1st row, 3x5 (5 row max, flex start)
//     &:nth-child(1) {
//       grid-column: 1 / 4;
//       grid-row: 1 / 8;
//       align-self: start;
//     }
//     // Top bookshelf - next 4 items
//     // 2nd book starts in the 4th column and 3rd row, and is 2x3 (3 row max)
//     &:nth-child(2) {
//       grid-column: 4 / 6;
//       grid-row: 4 / 8;
//       @extend .book.large;
//       align-self: start;
//       justify-self: center;
//     }
//     // 3rd book starts in 4th col and 1st row, and is 2x3 (3 row max)
//     &:nth-child(3) {
//       grid-column: 5 / 7;
//       grid-row: 1 / 4;
//       @extend .book.large;
//       align-self: start;
//       justify-self: center;
//     }
//     // 4th book starts in 6th column and 5th row, and is 1x2 (2 row max)
//     &:nth-child(4) {
//       grid-column: 6 / 7;
//       grid-row: 6 / 8;
//       align-self: start;
//     }
//     // All remaining books sit on the implicit grid
//     // They are 2 columns wide, and 3 rows long.
//     // The left items are left justified, the middle ones center, and right ones right justified
//     &:nth-child(n+5) {
//       grid-column-start: span 2;
//       grid-row-start: span 3;
//     }
//     &:nth-child(3n+5) {
//       justify-self: left;
//     }
//     &:nth-child(3n+6) {
//       justify-self: center;
//     }
//     &:nth-child(3n+7) {
//       justify-self: right;
//     }
//   }
//   @include media($large-screen-up) {
//     &:nth-child(6) {
//     }
//   }